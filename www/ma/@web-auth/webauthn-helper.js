/**
 * Bundled by jsDelivr using Rollup v2.32.0 and Terser v5.3.5.
 * Original file: /npm/@web-auth/webauthn-helper@0.0.13/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const e=(e,t,r)=>fetch(t,{method:"POST",credentials:"same-origin",redirect:"error",headers:{"Content-Type":"application/json",Accept:"application/json",...r},body:JSON.stringify(e)}),t=e=>{const t=(e=e.replace(/-/g,"+").replace(/_/g,"/")).length%4;if(t){if(1===t)throw new Error("InvalidLengthError: Input base64url string is the wrong length to determine padding");e+=new Array(5-t).join("=")}return window.atob(e)},r=e=>btoa(String.fromCharCode(...e)),a=e=>(e.challenge=Uint8Array.from(t(e.challenge),(e=>e.charCodeAt(0))),void 0!==e.user&&(e.user={...e.user,id:Uint8Array.from(window.atob(e.user.id),(e=>e.charCodeAt(0)))}),void 0!==e.excludeCredentials&&(e.excludeCredentials=e.excludeCredentials.map((e=>({...e,id:Uint8Array.from(t(e.id),(e=>e.charCodeAt(0)))})))),void 0!==e.allowCredentials&&(e.allowCredentials=e.allowCredentials.map((e=>({...e,id:Uint8Array.from(t(e.id),(e=>e.charCodeAt(0)))})))),e),n=e=>{const t={id:e.id,type:e.type,rawId:r(new Uint8Array(e.rawId)),response:{clientDataJSON:r(new Uint8Array(e.response.clientDataJSON))}};return void 0!==e.response.attestationObject&&(t.response.attestationObject=r(new Uint8Array(e.response.attestationObject))),void 0!==e.response.authenticatorData&&(t.response.authenticatorData=r(new Uint8Array(e.response.authenticatorData))),void 0!==e.response.signature&&(t.response.signature=r(new Uint8Array(e.response.signature))),void 0!==e.response.userHandle&&(t.response.userHandle=r(new Uint8Array(e.response.userHandle))),t},i=({actionUrl:t="/login",actionHeader:r={},optionsUrl:i="/login/options"},o={})=>async s=>{const d=await e(s,i,o),c=await d.json(),l=a(c),p=await navigator.credentials.get({publicKey:l}),w=n(p),u=await e(w,t,r);if(!u.ok)throw u;const g=await u.text();return""!==g?JSON.parse(g):g},o=({actionUrl:t="/register",actionHeader:r={},optionsUrl:i="/register/options"},o={})=>async s=>{const d=await e(s,i,o),c=await d.json(),l=a(c),p=await navigator.credentials.create({publicKey:l}),w=n(p),u=await e(w,t,r);if(!u.ok)throw u;const g=await u.text();return""!==g?JSON.parse(g):g};export{i as useLogin,o as useRegistration};
//# sourceMappingURL=/sm/abd5fe6c163c55ae0b0a6453127ee566befe388a537b1021be02f1a984e0f6cb.map